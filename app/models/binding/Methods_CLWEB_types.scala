// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package models.binding


// is shared among all
//case class EmptyElement()


case class GetObsDataTreeResponseCLWEB(success: Option[Boolean] = None,
  Tree: java.net.URI)


case class GetTimeTablesList(userID: Option[String] = None,
  password: Option[String] = None)


case class GetTimeTablesListResponse(success: Option[Boolean] = None,
  TimeTablesList: Option[java.net.URI] = None)

trait OutputFormat

object OutputFormat {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): OutputFormat = value match {
    case "netCDF" => NetCDFFormat
    case "VOTable" => VOTableFormat
    case "ASCII" => ASCIIFormat

  }
}

case object NetCDFFormat extends OutputFormat { override def toString = "netCDF" }
case object VOTableFormat extends OutputFormat { override def toString = "VOTable" }
case object ASCIIFormat extends OutputFormat { override def toString = "ASCII" }

trait TimeFormat

object TimeFormat {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): TimeFormat = value match {
    case "ISO8601" => ISO8601
    case "unixtime" => Unixtime

  }
}

case object ISO8601 extends TimeFormat { override def toString = "ISO8601" }
case object Unixtime extends TimeFormat { override def toString = "unixtime" }


case class GetParameter(startTime: String,
  stopTime: String,
  parameterID: String,
  sampling: Option[Float] = None,
  userID: Option[String] = None,
  password: Option[String] = None,
  outputFormat: Option[models.binding.OutputFormat] = None,
  timeFormat: Option[models.binding.TimeFormat] = None,
  gzip: Option[BigInt] = None)


case class GetParameterResponse(success: Option[Boolean] = None,
  dataFileURLs: Seq[java.net.URI] = Nil)


case class GetTimeTable(userID: Option[String] = None,
  password: Option[String] = None,
  ttID: String)


case class GetTimeTableResponse(success: Option[Boolean] = None,
  ttFileURL: java.net.URI)

