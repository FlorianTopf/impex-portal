// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package models.binding

trait SpacecraftTypeSINP

object SpacecraftTypeSINP {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): SpacecraftTypeSINP = value match {
    case "CLUSTER1" => ClusterA
    case "CLUSTER2" => ClusterB
    case "CLUSTER3" => ClusterC
    case "CLUSTER4" => ClusterD
    case "POLAR" => PolarValue
    case "CASSINI" => Cassini

  }
}

// @TODO this is wrong in the WSDL CLUSTER1-4 is the value
case object ClusterA extends SpacecraftTypeSINP { override def toString = "CLUSTER1" }
case object ClusterB extends SpacecraftTypeSINP { override def toString = "CLUSTER2" }
case object ClusterC extends SpacecraftTypeSINP { override def toString = "CLUSTER3" }
case object ClusterD extends SpacecraftTypeSINP { override def toString = "CLUSTER4" }
case object PolarValue extends SpacecraftTypeSINP { override def toString = "POLAR" }
case object Cassini extends SpacecraftTypeSINP { override def toString = "CASSINI" }

// @TODO can be removed savely 
// (not used ATM, will be imported from the IMPEx schema in the future)
trait CoordinateSystemTypeSINP

object CoordinateSystemTypeSINP {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): CoordinateSystemTypeSINP = value match {
    case "GSM" => GSMValue
    case "GSE" => GSEValue

  }
}

case object GSMValue extends CoordinateSystemTypeSINP { override def toString = "GSM" }
case object GSEValue extends CoordinateSystemTypeSINP { override def toString = "GSE" }


/** x,y,z
*/
case class ListOfDouble(x: Option[Double] = None,
  y: Option[Double] = None,
  z: Option[Double] = None)


/** List with sizes of a cube
*/
case class Cube_size_array(x_low: Option[BigInt] = None,
  x_high: Option[BigInt] = None,
  y_low: Option[BigInt] = None,
  y_high: Option[BigInt] = None,
  z_low: Option[BigInt] = None,
  z_high: Option[BigInt] = None)

  
case class DataPointValueSINP(ResourceID: String,
  Variable: Option[Seq[String]] = None,
  url_XYZ: java.net.URI,
  extraParams: Option[models.binding.ExtraParams_getDataPointValueSINP] = None)
  
case class ExtraParams_getDataPointValueSINP(OutputFileType: Option[models.binding.OutputFormatType] = None,
  InterpolationMethod: Option[models.binding.EnumInterpolation] = None)


/** List of individual parameters: SW Density, SW Velocity, IMF_B (Bx,By,Bz), Dst, AL, BD, BT, RD2, RD1, R2, R1.
*/
case class ExtraParams_calculateDataPointValueFixedTime(SWDensity: Option[Double] = None,
  SWVelocity: Option[BigInt] = None,
  IMF_B: Option[models.binding.ListOfDouble] = None,
  Dst: Option[Double] = None,
  AL: Option[Double] = None,
  OutputFileType: Option[models.binding.OutputFormatType] = None)


/** Only OutputFileType for now.
*/
case class ExtraParams_calculateDataPointValue(OutputFileType: Option[models.binding.OutputFormatType] = None)


/**  By default:'BD'=-196.0,'Flux'=131.0,'Rss'=1.35,'R2'=1.32,'DZ'=0.0,'IMF_B'=(0.0,0.0,0.0)
*/
case class ExtraParams_calculateDataPointValueMercury(OutputFileType: Option[models.binding.OutputFormatType] = None,
  BD: Option[Double] = None,
  Flux: Option[Double] = None,
  Rss: Option[Double] = None,
  R2: Option[Double] = None,
  DZ: Option[Double] = None,
  IMF_B: Option[models.binding.ListOfDouble] = None)


/** By default:'BDÐ¡'=3.0,'BT'=7.0,'RD2'=15.0,'RD1'=6.5,'Rss'=22.0,'R2'=18.0,'IMF_B'=(0.0,0.0,0.0)
*/
case class ExtraParams_calculateDataPointValueSaturn(OutputFileType: Option[models.binding.OutputFormatType] = None,
  BDC: Option[Double] = None,
  BT: Option[Double] = None,
  RD2: Option[Double] = None,
  RD1: Option[Double] = None,
  R2: Option[Double] = None,
  Rss: Option[Double] = None,
  IMF_B: Option[models.binding.ListOfDouble] = None)


/** 
*/
case class ExtraParams_calculateDataPointValueJupiter(OutputFileType: Option[models.binding.OutputFormatType] = None,
  BD: Option[Double] = None,
  BDC: Option[Double] = None,
  BT: Option[Double] = None,
  RD2: Option[Double] = None,
  RD1: Option[Double] = None,
  R2: Option[Double] = None,
  Rss: Option[Double] = None)


/** Only OutputFileType for now.
*/
case class ExtraParams_calculateDataPointValueSpacecraft(OutputFileType: Option[models.binding.OutputFormatType] = None)


/** Only OutputFileType for now.
*/
case class ExtraParams_calculateFieldLine(LineLength: Option[Double] = None,
  StepSize: Option[Double] = None,
  OutputFileType: Option[models.binding.OutputFormatType] = None)


/** List of individual parameters:SW Density,SW Velocity,IMF_B(Bx,By,Bz),Dst,AL.
*/
case class ExtraParams_calculateCube(SWDensity: Option[Double] = None,
  SWVelocity: Option[BigInt] = None,
  IMF_B: Option[models.binding.ListOfDouble] = None,
  Dst: Option[Double] = None,
  AL: Option[Double] = None,
  OutputFileType: Option[models.binding.OutputFormatType] = None)


/** List of parameters: BD,Flux,Rss,R2,DZ,IMF_B. By default:'BD'=-196.0,'Flux'=131.0,'Rss'=1.35,'R2'=1.32,'DZ'=0.0,'IMF_B'=(0.0,0.0,0.0)
*/
case class ExtraParams_calculateCubeMercury(BD: Option[Double] = None,
  Flux: Option[Double] = None,
  Rss: Option[Double] = None,
  R2: Option[Double] = None,
  DZ: Option[Double] = None,
  IMF_B: Option[models.binding.ListOfDouble] = None,
  OutputFileType: Option[models.binding.OutputFormatType] = None)


/** List of parameters: BDC, BT, RD2, RD1, R2, Rss, IMF_B. By default:'BDÐ¡'=3.0,'BT'=7.0,'RD2'=15.0,'RD1'=6.5,'Rss'=22.0,'R2'=18.0,'IMF_B'=(0.0,0.0,0.0)
*/
case class ExtraParams_calculateCubeSaturn(BDC: Option[Double] = None,
  BT: Option[Double] = None,
  RD2: Option[Double] = None,
  RD1: Option[Double] = None,
  R2: Option[Double] = None,
  Rss: Option[Double] = None,
  IMF_B: Option[models.binding.ListOfDouble] = None,
  OutputFileType: Option[models.binding.OutputFormatType] = None)


/** List of parameters: BDC, BT, RD2, RD1, R2, Rss, IMF_B.
*/
case class ExtraParams_calculateCubeJupiter(BDC: Option[Double] = None,
  BT: Option[Double] = None,
  RD2: Option[Double] = None,
  RD1: Option[Double] = None,
  R2: Option[Double] = None,
  Rss: Option[Double] = None,
  IMF_B: Option[models.binding.ListOfDouble] = None,
  OutputFileType: Option[models.binding.OutputFormatType] = None)


case class CalculateDataPointValueFixedTime(ResourceID: String,
  StartTime: javax.xml.datatype.XMLGregorianCalendar,
  extraParams: Option[models.binding.ExtraParams_calculateDataPointValueFixedTime] = None,
  url_XYZ: java.net.URI)


case class CalculateDataPointValue(ResourceID: String,
  extraParams: Option[models.binding.ExtraParams_calculateDataPointValue] = None,
  url_XYZ: java.net.URI)


case class CalculateDataPointValueMercury(ResourceID: String,
  extraParams: Option[models.binding.ExtraParams_calculateDataPointValueMercury] = None,
  url_XYZ: java.net.URI)


case class CalculateDataPointValueSaturn(ResourceID: String,
  extraParams: Option[models.binding.ExtraParams_calculateDataPointValueSaturn] = None,
  url_XYZ: java.net.URI)


case class CalculateDataPointValueJupiter(ResourceID: String,
  extraParams: Option[models.binding.ExtraParams_calculateDataPointValueJupiter] = None,
  url_XYZ: java.net.URI)


case class CalculateDataPointValueSpacecraft(ResourceID: String,
  Spacecraft_name: models.binding.SpacecraftTypeSINP,
  StartTime: javax.xml.datatype.XMLGregorianCalendar,
  StopTime: javax.xml.datatype.XMLGregorianCalendar,
  Sampling: javax.xml.datatype.Duration,
  extraParams: Option[models.binding.ExtraParams_calculateDataPointValueSpacecraft] = None)


case class CalculateFieldLine(ResourceID: String,
  StartTime: javax.xml.datatype.XMLGregorianCalendar,
  extraParams: Option[models.binding.ExtraParams_calculateFieldLine] = None,
  url_XYZ: java.net.URI)


case class CalculateCube(ResourceID: String,
  StartTime: javax.xml.datatype.XMLGregorianCalendar,
  extraParams: Option[models.binding.ExtraParams_calculateCube] = None,
  Sampling: Option[Double] = None,
  cube_size_array: Option[models.binding.Cube_size_array] = None)


case class CalculateCubeMercury(ResourceID: String,
  extraParams: Option[models.binding.ExtraParams_calculateCubeMercury] = None)


case class CalculateCubeSaturn(ResourceID: String,
  extraParams: Option[models.binding.ExtraParams_calculateCubeSaturn] = None)


case class CalculateCubeJupiter(ResourceID: String,
  extraParams: Option[models.binding.ExtraParams_calculateCubeJupiter] = None)

